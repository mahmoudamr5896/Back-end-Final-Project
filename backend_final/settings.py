"""
Django settings for backend_final project.

Generated by 'django-admin startproject' using Django 5.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-&=y07uj0urc@kd9og6@1gi3ogcslj7nwxy3(=r!rxj(3_ze9)8"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []
APPEND_SLASH = False


# Application definition

JAZZMIN_SETTINGS = {
    "site_title": "MR.Health",
    "site_header": "MR.Health",
    "site_brand": "MR.Health",
    "site_icon": "For_Rent_Backend/static/images/logo.jpeg",
    "show_ui_builder": True,
    "site_footer": "Copyright Â© 2024 MR.Health",
    "welcome_sign": "Welcome to MR.Health Admin Panel",
    "site_style": "info",  # Change the theme to 'info'
    "dark_mode_theme": "darkly",  # Set the dark mode theme to 'darkly'
    "show_apps": True,
    "show_models": True,
    "related_modal_active": True,
    "default_icon_parents": "fa fa-list",
    "default_icon_children": "fas fa-chevron-circle-right",
    'icons': {
        'auth': 'fas fa-users-cog',
        'auth.user': 'fas fa-user',
        'auth.group': 'fas fa-users',
        'myapp.customuser': 'fas fa-user',
        'myapp.doctor': 'fas fa-user-md',
        'myapp.patient': 'fas fa-user-injured',
        'myapp.appointment': 'fas fa-calendar-check',
        'myapp.review': 'fas fa-star',
        'myapp.availability': 'fas fa-clock',
        'myapp.payment': 'fas fa-credit-card',
    },
    'dashboard_custom': False,
    'custom_css': None,
    'custom_js': None,
    'button_classes': {
        'primary': 'btn btn-primary',  # Change button style to 'btn-primary'
        'secondary': 'btn btn-secondary',  # Add button style for 'btn-secondary'
        'success': 'btn btn-success',  # Add button style for 'btn-success'
        'info': 'btn btn-info',  # Add button style for 'btn-info'
        'warning': 'btn btn-warning',  # Add button style for 'btn-warning'
        'danger': 'btn btn-danger',  # Add button style for 'btn-danger'
        'add': 'btn btn-success',  # Style for "Add" button
        'change': 'btn btn-warning',  # Style for "Change" button
    },
    'navbar_small_text': False,  # Set navbar small text to False
    'top_navbar': True,  # Enable top navbar
    'hide_apps': ['sites'],  # Hide the "sites" app
    'hide_models': ['auth.Group'],  # Hide the "Group" model in the auth app
    'changeform_format': 'horizontal',  # Set changeform format to 'horizontal'
    'related_modal_active': True,  # Enable related modal
    'app_title_style': 'roman',  # Set app title style to 'roman'
}
JAZZMIN_UI_TWEAKS = {
    "navbar_small_text": False,
    "footer_small_text": False,
    "body_small_text": False,
    "brand_small_text": False,
    "brand_colour": "navbar-success",
    "accent": "accent-teal",
    "navbar": "navbar-dark",
    "no_navbar_border": True,
    "navbar_fixed": False,
    "layout_boxed": False,
    "footer_fixed": False,
    "sidebar_fixed": False,
    "sidebar": "sidebar-dark-info",
    "sidebar_nav_small_text": False,
    "sidebar_disable_expand": False,
    "sidebar_nav_child_indent": False,
    "sidebar_nav_compact_style": False,
    "sidebar_nav_legacy_style": False,
    "sidebar_nav_flat_style": False,
    "theme": "slate",
    "dark_mode_theme": "darkly",
    "button_classes": {
        "primary": "btn-primary",
        "secondary": "btn-secondary",
        "info": "btn-info",
        "warning": "btn-warning",
        "danger": "btn-danger",
        "success": "btn-success",
    },
}






INSTALLED_APPS = [
    'jazzmin',
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    'myapp',
    
    'rest_framework',
    'users',
    "django.contrib.sites",
    "allauth",
    "allauth.account",
    'rest_framework.authtoken',
        'corsheaders',


]

SITE_ID = 1


MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "allauth.account.middleware.AccountMiddleware",
        'corsheaders.middleware.CorsMiddleware',

]

ROOT_URLCONF = "backend_final.urls"
TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "backend_final.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

import os

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'finall_project',
        'USER': 'odoo17_iti',
        'PASSWORD': '12',
        'HOST': 'localhost',  
        'PORT': '5432',      
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True

CORS_ALLOW_ALL_ORIGINS = True 

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
STATICFILES_DIRS = [
    BASE_DIR / "static",
]

STATIC_URL = "static/"
STATIC_FILES_DIRS = [os.path.join(BASE_DIR, "static")]
# settings.py
ROOT_URLCONF = "backend_final.urls"
AUTH_USER_MODEL = "users.User"

REST_FRAMEWORK = {
      #'DEFAULT_PERMISSION_CLASSES': (
      #  'rest_framework.permissions.IsAuthenticated',
    #),
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
    ]

}

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

AUTHENTICATION_BACKENDS = (
    "django.contrib.auth.backends.ModelBackend",
    "allauth.account.auth_backends.AuthenticationBackend",)

# REST_FRAMEWORK = {
#     # Use Django's standard `django.contrib.auth` permissions,
#     # or allow read-only access for unauthenticated users.
#     'DEFAULT_PERMISSION_CLASSES': [
#         'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
#     ]
# }


SITE_ID = 1  # Or set it to your Site ID if you have multiple sites

ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_EMAIL_VERIFICATION = "mandatory"
ACCOUNT_EMAIL_CONFIRMATION_EXPIRE_DAYS = 1  # Activation link expiration time (1 day)

LOGIN_REDIRECT_URL = "/"
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "smtp.gmail.com"
EMAIL_HOST_USER = "ae4755740@gmail.com"
EMAIL_HOST_PASSWORD = "flmbjweippzhouft"
EMAIL_USE_TLS = True
EMAIL_PORT = 587
ACCOUNT_LOGOUT_REDIRECT_URL = "/"
LOGIN_URL = "/login/"
# djauth/settings.py
LOGIN_REDIRECT_URL = "/user/success"
LOGOUT_REDIRECT_URL = "/"

STATIC_ROOT = BASE_DIR / 'staticfiles'